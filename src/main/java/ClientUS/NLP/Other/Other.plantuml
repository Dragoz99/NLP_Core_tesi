@startuml

title __OTHER's Class Diagram__\n

  namespace ClientUS {
    namespace NLP {
      namespace Other {
        class ClientUS.NLP.Other.Actor_of_story {
            ~ ActorOfStory : String
            ~ Actor_ref : String
            ~ Second_actor_ref : String
            + Actor_of_story()
            + getActorOfStory()
            + getActor_ref()
            + getSecond_actor_ref()
            + setActorOfStory()
            + setActor_ref()
            + setSecondActor_ref()
            + toC_obj()
        }
      }
    }
  }
  

  namespace ClientUS {
    namespace NLP {
      namespace Other {
        class ClientUS.NLP.Other.a_rel {
            + name_attribute : String
            + name_class : String
            + a_rel()
            + getName_attribute()
            + getName_class()
            + setName_attribute()
            + setName_class()
        }
      }
    }
  }
  

  namespace ClientUS {
    namespace NLP {
      namespace Other {
        class ClientUS.NLP.Other.c_obj {
            + nome_cangiante : String
            + nome_index : String
            + nome_second_index : String
            + c_obj()
            + c_obj()
            + getNome_cangiante()
            + getNome_index()
            + getNome_second_index()
            + print()
            + setNome_cangiante()
            + setNome_index()
            + setNome_second_index()
        }
      }
    }
  }
  

  namespace ClientUS {
    namespace NLP {
      namespace Other {
        class ClientUS.NLP.Other.h_rel {
            {static} + classe_1 : String
            {static} + classe_2 : String
            {static} + type : String
            + getClasse_1()
            + getClasse_2()
            + getType()
            + h_rel()
            + h_rel()
            {static} + print()
            + setClasse_1()
            + setClasse_2()
            + setType()
        }
      }
    }
  }
  

  namespace ClientUS {
    namespace NLP {
      namespace Other {
        class ClientUS.NLP.Other.h_rel_new {
            ~ class_1 : List<String>
            ~ class_2 : List<String>
            ~ type : List<String>
            + addClass1()
            + addClass2()
            + addType()
            + getClass_1()
            + getClass_2()
            + getType()
            + h_rel_new()
            + print()
            + setClass_1()
            + setClass_2()
            + setType()
        }
      }
    }
  }
  

  namespace ClientUS {
    namespace NLP {
      namespace Other {
        class ClientUS.NLP.Other.insert_data_list {
            + insert_attribute()
            + insert_class()
            + insert_data_list()
            + insert_filename()
            + insert_h_relazioni()
            + insert_relazion()
            + insert_relazioni_new()
        }
      }
    }
  }
  

  namespace ClientUS {
    namespace NLP {
      namespace Other {
        class ClientUS.NLP.Other.r_rel {
            {static} - class_1 : String
            {static} - class_2 : String
            + getAll()
            + getClass_1()
            + getClass_2()
            {static} + print()
            + r_rel()
            {static} + r_rel_eql()
            {static} + r_rel_eql()
            + setClass_1()
            + setClass_2()
        }
      }
    }
  }
  

  namespace ClientUS {
    namespace NLP {
      namespace Other {
        class ClientUS.NLP.Other.r_rel_new {
            ~ class1 : List<String>
            ~ class2 : List<String>
            + getClass1()
            + getClass2()
            + print()
            + r_rel_new()
            + setClass1()
            + setClass2()
        }
      }
    }
  }
  

  namespace ClientUS {
    namespace NLP {
      namespace Other {
        class ClientUS.NLP.Other.test_rimovi {
            {static} + main()
        }
      }
    }
  }
  

  ClientUS.NLP.Other.insert_data_list o-- ClientUS.NLP.Liste : liste
  ClientUS.NLP.Other.insert_data_list o-- ServerUS.UserInterface : stub


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
